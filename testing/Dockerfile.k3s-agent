# Multi-stage build for K3s DaaS Agent
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache \
    git \
    make \
    gcc \
    musl-dev \
    linux-headers

# Set working directory
WORKDIR /build

# Copy K3s DaaS source
COPY . .

# Build the K3s agent with DaaS support
RUN CGO_ENABLED=1 GOOS=linux go build \
    -ldflags "-X github.com/k3s-io/k3s/pkg/version.Version=v1.34.1-k3s-daas" \
    -o k3s-daas \
    ./cmd/agent

# Runtime stage
FROM alpine:3.19

# Install runtime dependencies
RUN apk add --no-cache \
    ca-certificates \
    curl \
    iptables \
    ip6tables \
    fuse3 \
    findutils \
    tzdata

# Create k3s user and directories
RUN addgroup -g 1000 k3s && \
    adduser -D -u 1000 -G k3s k3s && \
    mkdir -p /var/lib/rancher/k3s /etc/rancher/k3s /etc/k3s/wallets && \
    chown -R k3s:k3s /var/lib/rancher/k3s /etc/rancher/k3s /etc/k3s

# Copy binary from builder
COPY --from=builder /build/k3s-daas /usr/local/bin/k3s

# Create symlinks for k3s commands
RUN ln -s /usr/local/bin/k3s /usr/local/bin/kubectl && \
    ln -s /usr/local/bin/k3s /usr/local/bin/crictl && \
    ln -s /usr/local/bin/k3s /usr/local/bin/ctr

# Copy configuration files
COPY testing/configs/k3s-agent/ /etc/rancher/k3s/
COPY testing/test-wallets/ /etc/k3s/wallets/

# Set proper permissions
RUN chmod +x /usr/local/bin/k3s && \
    chmod 600 /etc/k3s/wallets/*

# Health check script
COPY testing/scripts/agent-health.sh /usr/local/bin/agent-health.sh
RUN chmod +x /usr/local/bin/agent-health.sh

# Expose necessary ports
EXPOSE 10250 10255

# Switch to k3s user
USER k3s

# Set entrypoint
ENTRYPOINT ["/usr/local/bin/k3s"]
CMD ["agent"]

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD ["/usr/local/bin/agent-health.sh"]

# Labels
LABEL maintainer="DaaS Team"
LABEL version="1.34.1-k3s-daas"
LABEL description="K3s Agent with DaaS blockchain authentication"