# K8s-DaaS E2E Integration Test Environment
version: '3.8'

services:
  # Nautilus Control - K8s Master with Real Sui Integration
  nautilus-control:
    build:
      context: ./nautilus-release
      dockerfile: Dockerfile
    container_name: nautilus-control
    ports:
      - "6444:6443"    # K3s API Server
      - "8081:8080"    # HTTP API
    environment:
      - CONTRACT_PACKAGE_ID=0x029f3e4a78286e7534e2958c84c795cee3677c27f89dee56a29501b858e8892c
      - WORKER_REGISTRY_ID=0x733fe1e93455271672bdccec650f466c835edcf77e7c1ab7ee37ec70666cdc24
      - K8S_SCHEDULER_ID=0x1e3251aac591d8390e85ccd4abf5bb3326af74396d0221f5eb2d40ea42d17c24
      - PRIVATE_KEY=suiprivkey1qqd74wmst3u3ar3kenngevpnayu0n4kvdklu9ses22p7pfev7x53yugm7aw
      - SUI_RPC_URL=https://fullnode.testnet.sui.io
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - nautilus-data:/var/lib/rancher/k3s
      - nautilus-config:/etc/rancher/k3s
    networks:
      - k3s-daas-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # K3s Worker Node - Receives commands from Nautilus Control
  # worker-node-1:
  #   build:
  #     context: ./worker-release
  #     dockerfile: Dockerfile.simple
  #   container_name: worker-node-1
  #   environment:
  #     - MASTER_URL=https://nautilus-control:6443
  #     - NODE_TOKEN=${NODE_TOKEN:-waiting-for-master}
  #     - SEAL_TOKEN=seal_token_worker_123
  #     - NODE_ID=worker-node-001
  #   depends_on:
  #     - nautilus-control
  #   networks:
  #     - k3s-daas-network
  #   restart: unless-stopped
  #   volumes:
  #     - worker1-data:/var/lib/rancher/k3s
  #   privileged: true

volumes:
  nautilus-data:
    driver: local
  nautilus-config:
    driver: local
  worker1-data:
    driver: local

networks:
  k3s-daas-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16